import React from 'react';
import classnames from 'classnames';
import FormattedMessage from 'frontend/js/components/FormattedMessage';
import PropTypes from 'prop-types';
import useStyles from './useStyles';

function FiltersToggle({ onClick, isActive }) {
  const classes = useStyles({ isActive });

  return (
    <button type="button" onClick={onClick} className={classnames(classes.root, { 'is-active': isActive })}>
      <svg
        className={classnames(classes.icon, { 'is-active': isActive })}
        viewBox="0 0 14 12"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M11.3306 2.363C11.2259 2.7727 10.9879 3.1359 10.654 3.3955C10.3202 3.655 9.9094 3.796 9.4866 3.7964C8.98231 3.7959 8.49887 3.5953 8.14239 3.2387C7.78592 2.882 7.58556 2.3985 7.58531 1.8942C7.58747 1.432 7.75782 0.986278 8.06454 0.640408C8.37126 0.294548 8.79338 0.0721476 9.2521 0.0147376C9.7108 -0.0426724 10.1747 0.0688373 10.5572 0.328437C10.9397 0.588047 11.2146 0.977998 11.3306 1.4255H12.7031C12.8274 1.4255 12.9467 1.4749 13.0346 1.5628C13.1225 1.6507 13.1719 1.7699 13.1719 1.8942C13.1719 2.0185 13.1225 2.1378 13.0346 2.2257C12.9467 2.3136 12.8274 2.363 12.7031 2.363H11.3306ZM8.52281 1.8942C8.52873 1.6435 8.63205 1.405 8.81085 1.2292C8.98966 1.0533 9.2299 0.954048 9.4807 0.952338C9.7314 0.950638 9.973 1.0466 10.1542 1.22C10.3354 1.3934 10.4419 1.6305 10.4513 1.8811V1.9083C10.4362 2.155 10.3272 2.3866 10.1466 2.5553C9.966 2.724 9.7275 2.817 9.4804 2.8152C9.23321 2.8134 8.99615 2.7169 8.81802 2.5456C8.63988 2.3743 8.53422 2.1411 8.52281 1.8942ZM3.68437 3.9052C2.7975 3.9052 2.05031 4.5155 1.84125 5.3386H0.46875C0.34443 5.3386 0.225201 5.388 0.137294 5.4759C0.049386 5.5638 0 5.683 0 5.8074C0 5.9317 0.049386 6.0509 0.137294 6.1388C0.225201 6.2267 0.34443 6.2761 0.46875 6.2761H1.84125C1.94611 6.6856 2.18421 7.0487 2.51807 7.308C2.85192 7.5674 3.26256 7.7083 3.68531 7.7086C4.18957 7.7081 4.67301 7.5075 5.02948 7.1509C5.38595 6.7942 5.58631 6.3107 5.58656 5.8064C5.58607 5.3022 5.38547 4.8187 5.02882 4.4622C4.67217 4.1058 4.18863 3.9054 3.68437 3.9052ZM3.68437 4.8427C3.43086 4.8434 3.1878 4.9438 3.00766 5.1222C2.82752 5.3005 2.72476 5.5426 2.72156 5.7961V5.8177C2.72341 6.0083 2.78164 6.1941 2.8889 6.3517C2.99617 6.5092 3.14767 6.6315 3.32433 6.7032C3.50098 6.7748 3.69488 6.7925 3.8816 6.7541C4.06831 6.7157 4.23949 6.623 4.37356 6.4874C4.50763 6.3519 4.5986 6.1798 4.635 5.9927C4.6714 5.8056 4.6516 5.6119 4.57811 5.436C4.50461 5.2601 4.3807 5.1099 4.22199 5.0043C4.06328 4.8987 3.87687 4.8425 3.68625 4.8427H3.68437Z"
        />
        <path d="M6.735 6.27602H12.7031C12.8274 6.27602 12.9467 6.22671 13.0346 6.13871C13.1225 6.05081 13.1719 5.93161 13.1719 5.80731C13.1719 5.68301 13.1225 5.56371 13.0346 5.47581C12.9467 5.38791 12.8274 5.33852 12.7031 5.33852H6.735C6.61068 5.33852 6.49145 5.38791 6.40354 5.47581C6.31564 5.56371 6.26625 5.68301 6.26625 5.80731C6.26625 5.93161 6.31564 6.05081 6.40354 6.13871C6.49145 6.22671 6.61068 6.27602 6.735 6.27602ZM6.43688 2.36292H0.46875C0.34443 2.36292 0.225201 2.31352 0.137294 2.22562C0.049386 2.13772 0 2.01852 0 1.89422C0 1.76982 0.049386 1.65062 0.137294 1.56272C0.225201 1.47482 0.34443 1.42542 0.46875 1.42542H6.43688C6.5612 1.42542 6.68042 1.47482 6.76833 1.56272C6.85624 1.65062 6.90563 1.76982 6.90563 1.89422C6.90563 2.01852 6.85624 2.13772 6.76833 2.22562C6.68042 2.31352 6.5612 2.36292 6.43688 2.36292ZM0.46875 10.2379H6.44344C6.56776 10.2379 6.68699 10.1885 6.77489 10.1006C6.8628 10.0127 6.91219 9.89351 6.91219 9.76921C6.91219 9.64481 6.8628 9.52562 6.77489 9.43772C6.68699 9.34982 6.56776 9.30042 6.44344 9.30042H0.46875C0.34443 9.30042 0.225201 9.34982 0.137294 9.43772C0.049386 9.52562 0 9.64481 0 9.76921C0 9.89351 0.049386 10.0127 0.137294 10.1006C0.225201 10.1885 0.34443 10.2379 0.46875 10.2379Z" />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M11.4656 9.30232C11.3613 8.89252 11.1235 8.52912 10.7897 8.26932C10.456 8.00962 10.0453 7.86842 9.6224 7.86792C9.11803 7.86842 8.63444 8.06912 8.27794 8.42602C7.92144 8.78282 7.72119 9.26662 7.72119 9.77102C7.72169 10.2751 7.92216 10.7584 8.2786 11.1149C8.63505 11.4713 9.11835 11.6718 9.6224 11.6723C10.5103 11.6723 11.2565 11.062 11.4656 10.2398H12.7031C12.8274 10.2398 12.9466 10.1904 13.0345 10.1025C13.1224 10.0146 13.1718 9.89542 13.1718 9.77102C13.1718 9.64672 13.1224 9.52752 13.0345 9.43962C12.9466 9.35172 12.8274 9.30232 12.7031 9.30232H11.4656ZM8.65869 9.77102C8.67399 9.52582 8.78219 9.29572 8.96125 9.12742C9.1403 8.95922 9.3768 8.86562 9.6224 8.86562C9.8681 8.86562 10.1046 8.95922 10.2836 9.12742C10.4627 9.29572 10.5709 9.52582 10.5862 9.77102C10.5752 10.0193 10.4689 10.2537 10.2894 10.4255C10.1098 10.5973 9.8709 10.6932 9.6224 10.6932C9.374 10.6932 9.13505 10.5973 8.95551 10.4255C8.77597 10.2537 8.66964 10.0193 8.65869 9.77102Z"
        />
      </svg>

      <span className={classnames(classes.label, { 'is-active': isActive })}>
        <FormattedMessage id="shared.label.filters" />
      </span>

      <span className={classnames(classes.triangle, { 'is-active': isActive })} />
    </button>
  );
}

FiltersToggle.propTypes = {
  onClick: PropTypes.func.isRequired,
  isActive: PropTypes.bool.isRequired,
};

export default FiltersToggle;
